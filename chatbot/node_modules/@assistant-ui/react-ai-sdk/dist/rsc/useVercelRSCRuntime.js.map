{"version":3,"sources":["../../src/rsc/useVercelRSCRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport type { VercelRSCAdapter } from \"./VercelRSCAdapter\";\nimport {\n  ExternalStoreAdapter,\n  ThreadMessageLike,\n  useExternalMessageConverter,\n  useExternalStoreRuntime,\n} from \"@assistant-ui/react\";\nimport { VercelRSCMessage } from \"./VercelRSCMessage\";\nimport { useCallback, useMemo } from \"react\";\nimport { symbolInternalRSCExtras } from \"./utils/RSCThreadExtras\";\n\nconst vercelToThreadMessage = <T,>(\n  converter: (message: T) => VercelRSCMessage,\n  rawMessage: T,\n): ThreadMessageLike => {\n  const message = converter(rawMessage);\n\n  return {\n    id: message.id,\n    role: message.role,\n    content: [{ type: \"text\", text: \"[Developer: Please set up RSCDisplay]\" }],\n    createdAt: message.createdAt,\n  };\n};\n\nexport const useVercelRSCRuntime = <T extends WeakKey>(\n  adapter: VercelRSCAdapter<T>,\n) => {\n  const onNew = adapter.onNew;\n  if (!onNew)\n    throw new Error(\"You must pass a onNew function to useVercelRSCRuntime\");\n\n  const convertFn = useMemo(() => {\n    return (\n      adapter.convertMessage?.bind(adapter) ?? ((m: T) => m as VercelRSCMessage)\n    );\n  }, [adapter.convertMessage, adapter]);\n  const callback = useCallback(\n    (m: T) => {\n      return vercelToThreadMessage(convertFn, m);\n    },\n    [convertFn],\n  );\n\n  const messages = useExternalMessageConverter({\n    callback,\n    isRunning: adapter.isRunning ?? false,\n    messages: adapter.messages,\n  });\n\n  const eAdapter: ExternalStoreAdapter = {\n    isRunning: adapter.isRunning,\n    messages,\n    onNew,\n    onEdit: adapter.onEdit,\n    onReload: adapter.onReload,\n    adapters: adapter.adapters,\n    unstable_capabilities: {\n      copy: false,\n    },\n    extras: {\n      [symbolInternalRSCExtras]: { convertFn },\n    },\n  };\n\n  const runtime = useExternalStoreRuntime(eAdapter);\n  return runtime;\n};\n"],"mappings":";;;AAGA;AAAA,EAGE;AAAA,EACA;AAAA,OACK;AAEP,SAAS,aAAa,eAAe;AACrC,SAAS,+BAA+B;AAExC,IAAM,wBAAwB,CAC5B,WACA,eACsB;AACtB,QAAM,UAAU,UAAU,UAAU;AAEpC,SAAO;AAAA,IACL,IAAI,QAAQ;AAAA,IACZ,MAAM,QAAQ;AAAA,IACd,SAAS,CAAC,EAAE,MAAM,QAAQ,MAAM,wCAAwC,CAAC;AAAA,IACzE,WAAW,QAAQ;AAAA,EACrB;AACF;AAEO,IAAM,sBAAsB,CACjC,YACG;AACH,QAAM,QAAQ,QAAQ;AACtB,MAAI,CAAC;AACH,UAAM,IAAI,MAAM,uDAAuD;AAEzE,QAAM,YAAY,QAAQ,MAAM;AAC9B,WACE,QAAQ,gBAAgB,KAAK,OAAO,MAAM,CAAC,MAAS;AAAA,EAExD,GAAG,CAAC,QAAQ,gBAAgB,OAAO,CAAC;AACpC,QAAM,WAAW;AAAA,IACf,CAAC,MAAS;AACR,aAAO,sBAAsB,WAAW,CAAC;AAAA,IAC3C;AAAA,IACA,CAAC,SAAS;AAAA,EACZ;AAEA,QAAM,WAAW,4BAA4B;AAAA,IAC3C;AAAA,IACA,WAAW,QAAQ,aAAa;AAAA,IAChC,UAAU,QAAQ;AAAA,EACpB,CAAC;AAED,QAAM,WAAiC;AAAA,IACrC,WAAW,QAAQ;AAAA,IACnB;AAAA,IACA;AAAA,IACA,QAAQ,QAAQ;AAAA,IAChB,UAAU,QAAQ;AAAA,IAClB,UAAU,QAAQ;AAAA,IAClB,uBAAuB;AAAA,MACrB,MAAM;AAAA,IACR;AAAA,IACA,QAAQ;AAAA,MACN,CAAC,uBAAuB,GAAG,EAAE,UAAU;AAAA,IACzC;AAAA,EACF;AAEA,QAAM,UAAU,wBAAwB,QAAQ;AAChD,SAAO;AACT;","names":[]}