{"version":3,"sources":["../../../src/ui/use-assistant/useVercelUseAssistantRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport type { useAssistant } from \"@ai-sdk/react\";\nimport { useExternalStoreRuntime } from \"@assistant-ui/react\";\nimport { useInputSync } from \"../utils/useInputSync\";\nimport { toCreateMessage } from \"../utils/toCreateMessage\";\nimport { vercelAttachmentAdapter } from \"../utils/vercelAttachmentAdapter\";\nimport { ExternalStoreAdapter } from \"@assistant-ui/react\";\nimport { AISDKMessageConverter } from \"../utils/convertMessage\";\n\nexport type VercelUseChatAdapter = {\n  adapters?:\n    | Omit<NonNullable<ExternalStoreAdapter[\"adapters\"]>, \"attachments\">\n    | undefined;\n};\n\nexport const useVercelUseAssistantRuntime = (\n  assistantHelpers: ReturnType<typeof useAssistant>,\n  adapter: VercelUseChatAdapter = {},\n) => {\n  const messages = AISDKMessageConverter.useThreadMessages({\n    messages: assistantHelpers.messages,\n    isRunning: assistantHelpers.status === \"in_progress\",\n  });\n\n  const runtime = useExternalStoreRuntime({\n    isRunning: assistantHelpers.status === \"in_progress\",\n    messages,\n    onCancel: async () => assistantHelpers.stop(),\n    onNew: async (message) => {\n      await assistantHelpers.append(await toCreateMessage(message));\n    },\n    adapters: {\n      attachments: vercelAttachmentAdapter,\n      ...adapter.adapters,\n      threadList: new Proxy(adapter.adapters?.threadList ?? {}, {\n        get(target, prop, receiver) {\n          if (prop === \"onSwitchToNewThread\") {\n            return () => {\n              assistantHelpers.messages = [];\n              assistantHelpers.input = \"\";\n              assistantHelpers.setMessages([]);\n              assistantHelpers.setInput(\"\");\n\n              if (typeof target.onSwitchToNewThread === \"function\") {\n                return target.onSwitchToNewThread.call(target);\n              }\n            };\n          }\n\n          return Reflect.get(target, prop, receiver);\n        },\n      }),\n    },\n  });\n\n  useInputSync(assistantHelpers, runtime);\n\n  return runtime;\n};\n"],"mappings":";;;AAGA,SAAS,+BAA+B;AACxC,SAAS,oBAAoB;AAC7B,SAAS,uBAAuB;AAChC,SAAS,+BAA+B;AAExC,SAAS,6BAA6B;AAQ/B,IAAM,+BAA+B,CAC1C,kBACA,UAAgC,CAAC,MAC9B;AACH,QAAM,WAAW,sBAAsB,kBAAkB;AAAA,IACvD,UAAU,iBAAiB;AAAA,IAC3B,WAAW,iBAAiB,WAAW;AAAA,EACzC,CAAC;AAED,QAAM,UAAU,wBAAwB;AAAA,IACtC,WAAW,iBAAiB,WAAW;AAAA,IACvC;AAAA,IACA,UAAU,YAAY,iBAAiB,KAAK;AAAA,IAC5C,OAAO,OAAO,YAAY;AACxB,YAAM,iBAAiB,OAAO,MAAM,gBAAgB,OAAO,CAAC;AAAA,IAC9D;AAAA,IACA,UAAU;AAAA,MACR,aAAa;AAAA,MACb,GAAG,QAAQ;AAAA,MACX,YAAY,IAAI,MAAM,QAAQ,UAAU,cAAc,CAAC,GAAG;AAAA,QACxD,IAAI,QAAQ,MAAM,UAAU;AAC1B,cAAI,SAAS,uBAAuB;AAClC,mBAAO,MAAM;AACX,+BAAiB,WAAW,CAAC;AAC7B,+BAAiB,QAAQ;AACzB,+BAAiB,YAAY,CAAC,CAAC;AAC/B,+BAAiB,SAAS,EAAE;AAE5B,kBAAI,OAAO,OAAO,wBAAwB,YAAY;AACpD,uBAAO,OAAO,oBAAoB,KAAK,MAAM;AAAA,cAC/C;AAAA,YACF;AAAA,UACF;AAEA,iBAAO,QAAQ,IAAI,QAAQ,MAAM,QAAQ;AAAA,QAC3C;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,eAAa,kBAAkB,OAAO;AAEtC,SAAO;AACT;","names":[]}