{"version":3,"sources":["../../../src/ui/use-chat/useVercelUseChatRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport type { useChat } from \"@ai-sdk/react\";\nimport { useExternalStoreRuntime } from \"@assistant-ui/react\";\nimport { useInputSync } from \"../utils/useInputSync\";\nimport { sliceMessagesUntil } from \"../utils/sliceMessagesUntil\";\nimport { toCreateMessage } from \"../utils/toCreateMessage\";\nimport { vercelAttachmentAdapter } from \"../utils/vercelAttachmentAdapter\";\nimport { getVercelAIMessages } from \"../getVercelAIMessages\";\nimport { ExternalStoreAdapter } from \"@assistant-ui/react\";\nimport { useState } from \"react\";\nimport { generateId } from \"@ai-sdk/ui-utils\";\nimport { AISDKMessageConverter } from \"../utils/convertMessage\";\n\nexport type VercelUseChatAdapter = {\n  adapters?:\n    | Omit<NonNullable<ExternalStoreAdapter[\"adapters\"]>, \"attachments\">\n    | undefined;\n  unstable_joinStrategy?: \"concat-content\" | \"none\";\n};\n\nexport const useVercelUseChatRuntime = (\n  chatHelpers: ReturnType<typeof useChat>,\n  adapter: VercelUseChatAdapter = {},\n) => {\n  const messages = AISDKMessageConverter.useThreadMessages({\n    isRunning:\n      chatHelpers.status === \"submitted\" || chatHelpers.status == \"streaming\",\n    messages: chatHelpers.messages,\n    joinStrategy: adapter.unstable_joinStrategy,\n  });\n\n  const [threadId, setThreadId] = useState<string>(generateId());\n\n  const runtime = useExternalStoreRuntime({\n    isRunning: chatHelpers.isLoading,\n    messages,\n    setMessages: (messages) =>\n      chatHelpers.setMessages(messages.map(getVercelAIMessages).flat()),\n    onCancel: async () => chatHelpers.stop(),\n    onNew: async (message) => {\n      await chatHelpers.append(await toCreateMessage(message));\n    },\n    onEdit: async (message) => {\n      const newMessages = sliceMessagesUntil(\n        chatHelpers.messages,\n        message.parentId,\n      );\n      chatHelpers.setMessages(newMessages);\n\n      await chatHelpers.append(await toCreateMessage(message));\n    },\n    onReload: async (parentId: string | null) => {\n      const newMessages = sliceMessagesUntil(chatHelpers.messages, parentId);\n      chatHelpers.setMessages(newMessages);\n\n      await chatHelpers.reload();\n    },\n    onAddToolResult: ({ toolCallId, result }) => {\n      chatHelpers.addToolResult({ toolCallId, result });\n    },\n    adapters: {\n      attachments: vercelAttachmentAdapter,\n      ...adapter.adapters,\n      threadList: new Proxy(adapter.adapters?.threadList ?? {}, {\n        get(target, prop, receiver) {\n          if (prop === \"threadId\") {\n            return target.threadId ?? threadId;\n          }\n          if (prop === \"onSwitchToNewThread\") {\n            return () => {\n              chatHelpers.messages = [];\n              chatHelpers.input = \"\";\n              chatHelpers.setMessages([]);\n              chatHelpers.setInput(\"\");\n              setThreadId(generateId());\n\n              if (typeof target.onSwitchToNewThread === \"function\") {\n                return target.onSwitchToNewThread.call(target);\n              }\n            };\n          }\n\n          return Reflect.get(target, prop, receiver);\n        },\n      }),\n    },\n  });\n\n  useInputSync(chatHelpers, runtime);\n\n  return runtime;\n};\n"],"mappings":";;;AAGA,SAAS,+BAA+B;AACxC,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,uBAAuB;AAChC,SAAS,+BAA+B;AACxC,SAAS,2BAA2B;AAEpC,SAAS,gBAAgB;AACzB,SAAS,kBAAkB;AAC3B,SAAS,6BAA6B;AAS/B,IAAM,0BAA0B,CACrC,aACA,UAAgC,CAAC,MAC9B;AACH,QAAM,WAAW,sBAAsB,kBAAkB;AAAA,IACvD,WACE,YAAY,WAAW,eAAe,YAAY,UAAU;AAAA,IAC9D,UAAU,YAAY;AAAA,IACtB,cAAc,QAAQ;AAAA,EACxB,CAAC;AAED,QAAM,CAAC,UAAU,WAAW,IAAI,SAAiB,WAAW,CAAC;AAE7D,QAAM,UAAU,wBAAwB;AAAA,IACtC,WAAW,YAAY;AAAA,IACvB;AAAA,IACA,aAAa,CAACA,cACZ,YAAY,YAAYA,UAAS,IAAI,mBAAmB,EAAE,KAAK,CAAC;AAAA,IAClE,UAAU,YAAY,YAAY,KAAK;AAAA,IACvC,OAAO,OAAO,YAAY;AACxB,YAAM,YAAY,OAAO,MAAM,gBAAgB,OAAO,CAAC;AAAA,IACzD;AAAA,IACA,QAAQ,OAAO,YAAY;AACzB,YAAM,cAAc;AAAA,QAClB,YAAY;AAAA,QACZ,QAAQ;AAAA,MACV;AACA,kBAAY,YAAY,WAAW;AAEnC,YAAM,YAAY,OAAO,MAAM,gBAAgB,OAAO,CAAC;AAAA,IACzD;AAAA,IACA,UAAU,OAAO,aAA4B;AAC3C,YAAM,cAAc,mBAAmB,YAAY,UAAU,QAAQ;AACrE,kBAAY,YAAY,WAAW;AAEnC,YAAM,YAAY,OAAO;AAAA,IAC3B;AAAA,IACA,iBAAiB,CAAC,EAAE,YAAY,OAAO,MAAM;AAC3C,kBAAY,cAAc,EAAE,YAAY,OAAO,CAAC;AAAA,IAClD;AAAA,IACA,UAAU;AAAA,MACR,aAAa;AAAA,MACb,GAAG,QAAQ;AAAA,MACX,YAAY,IAAI,MAAM,QAAQ,UAAU,cAAc,CAAC,GAAG;AAAA,QACxD,IAAI,QAAQ,MAAM,UAAU;AAC1B,cAAI,SAAS,YAAY;AACvB,mBAAO,OAAO,YAAY;AAAA,UAC5B;AACA,cAAI,SAAS,uBAAuB;AAClC,mBAAO,MAAM;AACX,0BAAY,WAAW,CAAC;AACxB,0BAAY,QAAQ;AACpB,0BAAY,YAAY,CAAC,CAAC;AAC1B,0BAAY,SAAS,EAAE;AACvB,0BAAY,WAAW,CAAC;AAExB,kBAAI,OAAO,OAAO,wBAAwB,YAAY;AACpD,uBAAO,OAAO,oBAAoB,KAAK,MAAM;AAAA,cAC/C;AAAA,YACF;AAAA,UACF;AAEA,iBAAO,QAAQ,IAAI,QAAQ,MAAM,QAAQ;AAAA,QAC3C;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AAED,eAAa,aAAa,OAAO;AAEjC,SAAO;AACT;","names":["messages"]}