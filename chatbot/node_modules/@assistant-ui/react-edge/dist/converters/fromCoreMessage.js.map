{"version":3,"sources":["../../src/converters/fromCoreMessage.ts"],"sourcesContent":["import {\n  CompleteAttachment,\n  INTERNAL,\n  MessageStatus,\n  ThreadMessage,\n  ToolCallContentPart,\n} from \"@assistant-ui/react\";\nimport { CoreMessage } from \"../edge/CoreTypes\";\n\nconst { generateId } = INTERNAL;\n\nexport const fromCoreMessages = (\n  message: readonly CoreMessage[],\n): ThreadMessage[] => {\n  return message.map((message) => fromCoreMessage(message));\n};\n\nexport const fromCoreMessage = (\n  message: CoreMessage,\n  {\n    id = generateId(),\n    status = { type: \"complete\", reason: \"unknown\" } as MessageStatus,\n    attachments = [] as readonly CompleteAttachment[],\n  } = {},\n): ThreadMessage => {\n  const commonProps = {\n    id,\n    createdAt: new Date(),\n  };\n\n  const role = message.role;\n  switch (role) {\n    case \"assistant\":\n      return {\n        ...commonProps,\n        role,\n        content: message.content.map((part) => {\n          if (part.type === \"tool-call\") {\n            return {\n              ...part,\n              args: part.args as any,\n              argsText: JSON.stringify(part.args),\n            } satisfies ToolCallContentPart;\n          }\n          return part;\n        }),\n        status,\n\n        metadata: {\n          unstable_annotations: [],\n          unstable_data: [],\n          steps: [],\n          custom: {},\n        },\n      } satisfies ThreadMessage;\n\n    case \"user\":\n      return {\n        ...commonProps,\n        role,\n        content: message.content,\n        attachments,\n        metadata: { custom: {} },\n      } satisfies ThreadMessage;\n\n    case \"system\":\n      return {\n        ...commonProps,\n        role,\n        content: message.content,\n        metadata: { custom: {} },\n      } satisfies ThreadMessage;\n\n    default: {\n      const unsupportedRole: never = role;\n      throw new Error(`Unknown message role: ${unsupportedRole}`);\n    }\n  }\n};\n"],"mappings":";AAAA;AAAA,EAEE;AAAA,OAIK;AAGP,IAAM,EAAE,WAAW,IAAI;AAEhB,IAAM,mBAAmB,CAC9B,YACoB;AACpB,SAAO,QAAQ,IAAI,CAACA,aAAY,gBAAgBA,QAAO,CAAC;AAC1D;AAEO,IAAM,kBAAkB,CAC7B,SACA;AAAA,EACE,KAAK,WAAW;AAAA,EAChB,SAAS,EAAE,MAAM,YAAY,QAAQ,UAAU;AAAA,EAC/C,cAAc,CAAC;AACjB,IAAI,CAAC,MACa;AAClB,QAAM,cAAc;AAAA,IAClB;AAAA,IACA,WAAW,oBAAI,KAAK;AAAA,EACtB;AAEA,QAAM,OAAO,QAAQ;AACrB,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO;AAAA,QACL,GAAG;AAAA,QACH;AAAA,QACA,SAAS,QAAQ,QAAQ,IAAI,CAAC,SAAS;AACrC,cAAI,KAAK,SAAS,aAAa;AAC7B,mBAAO;AAAA,cACL,GAAG;AAAA,cACH,MAAM,KAAK;AAAA,cACX,UAAU,KAAK,UAAU,KAAK,IAAI;AAAA,YACpC;AAAA,UACF;AACA,iBAAO;AAAA,QACT,CAAC;AAAA,QACD;AAAA,QAEA,UAAU;AAAA,UACR,sBAAsB,CAAC;AAAA,UACvB,eAAe,CAAC;AAAA,UAChB,OAAO,CAAC;AAAA,UACR,QAAQ,CAAC;AAAA,QACX;AAAA,MACF;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,GAAG;AAAA,QACH;AAAA,QACA,SAAS,QAAQ;AAAA,QACjB;AAAA,QACA,UAAU,EAAE,QAAQ,CAAC,EAAE;AAAA,MACzB;AAAA,IAEF,KAAK;AACH,aAAO;AAAA,QACL,GAAG;AAAA,QACH;AAAA,QACA,SAAS,QAAQ;AAAA,QACjB,UAAU,EAAE,QAAQ,CAAC,EAAE;AAAA,MACzB;AAAA,IAEF,SAAS;AACP,YAAM,kBAAyB;AAC/B,YAAM,IAAI,MAAM,yBAAyB,eAAe,EAAE;AAAA,IAC5D;AAAA,EACF;AACF;","names":["message"]}