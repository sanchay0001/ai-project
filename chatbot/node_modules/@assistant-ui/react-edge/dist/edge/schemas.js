// src/edge/schemas.ts
import { z } from "zod";
var LanguageModelV1FunctionToolSchema = z.object({
  type: z.literal("function"),
  name: z.string(),
  description: z.string().optional(),
  parameters: z.custom(
    (val) => typeof val === "object" && val !== null
  )
});
var TextContentPartSchema = z.object({
  type: z.literal("text"),
  text: z.string()
});
var ImageContentPartSchema = z.object({
  type: z.literal("image"),
  image: z.string()
});
var FileContentPartSchema = z.object({
  type: z.literal("file"),
  data: z.string(),
  mimeType: z.string()
});
var Unstable_AudioContentPart = z.object({
  type: z.literal("audio"),
  audio: z.object({
    data: z.string(),
    format: z.union([z.literal("mp3"), z.literal("wav")])
  })
});
var CoreToolCallContentPartSchema = z.object({
  type: z.literal("tool-call"),
  toolCallId: z.string(),
  toolName: z.string(),
  args: z.record(z.unknown()),
  result: z.unknown().optional(),
  isError: z.boolean().optional()
});
var CoreUserMessageSchema = z.object({
  role: z.literal("user"),
  content: z.array(
    z.discriminatedUnion("type", [
      TextContentPartSchema,
      ImageContentPartSchema,
      FileContentPartSchema,
      Unstable_AudioContentPart
    ])
  ).min(1).readonly()
});
var CoreAssistantMessageSchema = z.object({
  role: z.literal("assistant"),
  content: z.array(
    z.discriminatedUnion("type", [
      TextContentPartSchema,
      CoreToolCallContentPartSchema
    ])
  ).min(1).readonly()
});
var CoreSystemMessageSchema = z.object({
  role: z.literal("system"),
  content: z.tuple([TextContentPartSchema]).readonly()
});
var CoreMessageSchema = z.discriminatedUnion("role", [
  CoreSystemMessageSchema,
  CoreUserMessageSchema,
  CoreAssistantMessageSchema
]);
var LanguageModelV1CallSettingsSchema = z.object({
  maxTokens: z.number().int().positive().optional(),
  temperature: z.number().optional(),
  topP: z.number().optional(),
  presencePenalty: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  seed: z.number().int().optional(),
  headers: z.record(z.string().optional()).optional()
});
var LanguageModelConfigSchema = z.object({
  apiKey: z.string().optional(),
  baseUrl: z.string().optional(),
  modelName: z.string().optional()
});
export {
  CoreAssistantMessageSchema,
  CoreMessageSchema,
  CoreSystemMessageSchema,
  CoreToolCallContentPartSchema,
  CoreUserMessageSchema,
  FileContentPartSchema,
  ImageContentPartSchema,
  LanguageModelConfigSchema,
  LanguageModelV1CallSettingsSchema,
  LanguageModelV1FunctionToolSchema,
  TextContentPartSchema,
  Unstable_AudioContentPart
};
//# sourceMappingURL=schemas.js.map