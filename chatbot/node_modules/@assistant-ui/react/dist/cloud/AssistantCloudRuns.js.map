{"version":3,"sources":["../../src/cloud/AssistantCloudRuns.tsx"],"sourcesContent":["import { ThreadMessage } from \"../types\";\nimport { AssistantCloudAPI } from \"./AssistantCloudAPI\";\nimport { AssistantStream, PlainTextDecoder } from \"assistant-stream\";\n\ntype AssistantCloudRunsStreamBody = {\n  thread_id: string;\n  assistant_id: \"system/thread_title\";\n  messages: readonly ThreadMessage[];\n};\n\nexport class AssistantCloudRuns {\n  constructor(private cloud: AssistantCloudAPI) {}\n\n  public async stream(\n    body: AssistantCloudRunsStreamBody,\n  ): Promise<AssistantStream> {\n    const response = await this.cloud.makeRawRequest(\"/runs/stream\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"text/plain\",\n      },\n      body,\n    });\n    return AssistantStream.fromResponse(response, new PlainTextDecoder());\n  }\n}\n"],"mappings":";AAEA,SAAS,iBAAiB,wBAAwB;AAQ3C,IAAM,qBAAN,MAAyB;AAAA,EAC9B,YAAoB,OAA0B;AAA1B;AAAA,EAA2B;AAAA,EAE/C,MAAa,OACX,MAC0B;AAC1B,UAAM,WAAW,MAAM,KAAK,MAAM,eAAe,gBAAgB;AAAA,MAC/D,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,MACA;AAAA,IACF,CAAC;AACD,WAAO,gBAAgB,aAAa,UAAU,IAAI,iBAAiB,CAAC;AAAA,EACtE;AACF;","names":[]}