{"version":3,"sources":["../../../src/primitives/actionBar/ActionBarReload.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useCallback } from \"react\";\nimport { useMessageRuntime } from \"../../context\";\nimport { useThreadRuntime } from \"../../context/react/ThreadContext\";\nimport { useCombinedStore } from \"../../utils/combined/useCombinedStore\";\n\nconst useActionBarReload = () => {\n  const messageRuntime = useMessageRuntime();\n  const threadRuntime = useThreadRuntime();\n\n  const disabled = useCombinedStore(\n    [threadRuntime, messageRuntime],\n    (t, m) => t.isRunning || t.isDisabled || m.role !== \"assistant\",\n  );\n\n  const callback = useCallback(() => {\n    messageRuntime.reload();\n  }, [messageRuntime]);\n\n  if (disabled) return null;\n  return callback;\n};\n\nexport namespace ActionBarPrimitiveReload {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useActionBarReload>;\n}\n\nexport const ActionBarPrimitiveReload = createActionButton(\n  \"ActionBarPrimitive.Reload\",\n  useActionBarReload,\n);\n"],"mappings":";;;AAEA;AAAA,EAGE;AAAA,OACK;AACP,SAAS,mBAAmB;AAC5B,SAAS,yBAAyB;AAClC,SAAS,wBAAwB;AACjC,SAAS,wBAAwB;AAEjC,IAAM,qBAAqB,MAAM;AAC/B,QAAM,iBAAiB,kBAAkB;AACzC,QAAM,gBAAgB,iBAAiB;AAEvC,QAAM,WAAW;AAAA,IACf,CAAC,eAAe,cAAc;AAAA,IAC9B,CAAC,GAAG,MAAM,EAAE,aAAa,EAAE,cAAc,EAAE,SAAS;AAAA,EACtD;AAEA,QAAM,WAAW,YAAY,MAAM;AACjC,mBAAe,OAAO;AAAA,EACxB,GAAG,CAAC,cAAc,CAAC;AAEnB,MAAI,SAAU,QAAO;AACrB,SAAO;AACT;AAOO,IAAM,2BAA2B;AAAA,EACtC;AAAA,EACA;AACF;","names":[]}