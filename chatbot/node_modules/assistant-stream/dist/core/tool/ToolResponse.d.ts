import { ReadonlyJSONValue } from "../../utils/json/json-value";
declare const TOOL_RESPONSE_SYMBOL: unique symbol;
export type ToolResponseInit<TResult> = {
    result: TResult;
    artifact?: ReadonlyJSONValue | undefined;
    isError?: boolean | undefined;
};
export declare class ToolResponse<TResult> {
    get [TOOL_RESPONSE_SYMBOL](): boolean;
    readonly artifact?: ReadonlyJSONValue | undefined;
    readonly result: TResult;
    readonly isError: boolean;
    constructor(options: ToolResponseInit<TResult>);
    static [Symbol.hasInstance](obj: unknown): obj is ToolResponse<unknown>;
}
export {};
//# sourceMappingURL=ToolResponse.d.ts.map